version: "2"

services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.2.1
    # Enables the web UI and tells Traefik to listen to docker
    # command: --configFile=/home/ec2-user/sphinx-deploy/traefik.yaml
    command:
      - "--log.level=DEBUG"
    ports:
      # The HTTP port
      - 80:80
      # The Web UI (enabled by --api.insecure=true)
      - 8080:8080
      # entrypoints
      - 443:443
      # - 1883:1883 # extra
      - 8883:8883
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - ./docker/traefik.yaml:/etc/traefik/traefik.yaml
      # - /home/ec2-user/letsencrypt:/letsencrypt
    environment:
      - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
      - AWS_REGION=$AWS_REGION
    logging:
      options:
        max-size: 10m
    ulimits:
      nproc: 65535
      nofile:
        soft: 1000000
        hard: 1000000

  # auth:
  #   image: sphinx-auth
  #   depends_on:
  #     - reverse-proxy
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.auth.rule=Host(`auth.sphinx.chat`)"
  #     - "traefik.http.services.auth.loadbalancer.server.port=9090"
  #     - "traefik.http.routers.auth.tls=true"
  #     - "traefik.http.routers.auth.tls.certresolver=myresolver"
  #     - "traefik.http.routers.auth.entrypoints=websecure"
  #   restart: on-failure
  #   environment:
  #     - JWT_KEY=$JWT_KEY
  #     - CLIENT_KEYS=$CLIENT_KEYS
  #     - OAUTH_TIMEOUT=$OAUTH_TIMEOUT

  communities:
    # image: zion-communities
    build: .
    depends_on:
      # - auth
      - reverse-proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.communities.rule=Host(`127.0.0.1`)"
      - "traefik.http.routers.communities.entrypoints=web"
      - "traefik.http.services.communities.loadbalancer.server.port=$PORT"

      - "traefik.tcp.routers.communities.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.communities.entrypoints=mqttsecure"
      - "traefik.tcp.services.communities.loadbalancer.server.port=1883"
      # - "traefik.tcp.routers.communities.tls=false"
      # # - "traefik.tcp.routers.communities.tls.certresolver=myresolver"
      - "traefik.tcp.routers.communities.service=communities"
    restart: on-failure
    environment:
      - PORT=$PORT
      - RDS_HOSTNAME=$RDS_HOSTNAME
      - RDS_PORT=$RDS_PORT
      - RDS_DB_NAME=$RDS_DB_NAME
      - RDS_USERNAME=$RDS_USERNAME
      - RDS_PASSWORD=$RDS_PASSWORD
      - JWT_KEY=$JWT_KEY
      - PRIV_KEY=$PRIV_KEY
      - PODCAST_INDEX_SECRET=$PODCAST_INDEX_SECRET
      - PODCAST_INDEX_KEY=$PODCAST_INDEX_KEY
    ulimits:
      nproc: 65535
      nofile:
        soft: 1000000
        hard: 1000000
